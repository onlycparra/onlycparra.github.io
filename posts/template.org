#+HTML_DOCTYPE: html5
#+HTML_HEAD: <meta name="viewport" content="width=device-width, initial-scale=1.0">
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../style.css">
#+LANGUAGE: en
#+OPTIONS: html-style:nil
#+OPTIONS: ^:nil f:not-nil num:nil
#+OPTIONS: toc:2
#+OPTIONS: creator:nil
#+OPTIONS: email:non-nil
#+AUTHOR: Claudio Parra
#+EMAIL: onlycparra@hotmail.com

#+TITLE: Org-Mode Showcase
#+DESCRIPTION: A demonstration of org-mode to html+css exporting


* First Words
Here some demo of what is possible with org-mode and the css that I am using now.
You can make pretty lists with any of these =-=, =*=, =+=, =1.=, =1)= strings as bullets:
 - Apple
 - Pear
 - Mango
 - Grapes
 - Watermelon

Or use numbers if you want:
1. First thing.
2. Second thing.
   1) One part of it.
   2) And the oter part. 
3. Fourth thing.

Even make checklists:
- [ ] Haven't done this yet.
- [X] This one is ready.
- [-] Half way done.

Add some basic formating:
 + _underscores let you underline things_
 + *stars add emphasis*
 + /slashes are italics/
 + +pluses are strikethrough+
 + =equal signs are verbatim text=
 + ~tildes can also be used~

* Quoting somebody
You can include quotes of some famous person by using =#+BEGIN_blockquote= and =#+END_blockquote=

#+BEGIN_blockquote
Some famous quote with a lot of wisdom in in, nobody actually knows the author, but let's guess that it was Gandi.

--Gandi.
#+END_blockquote

* Headlines
Nesting headlines is as easy as adding another start
** Second Level headline
   Text of the second level.
*** Third level headline
    Text of the third level.
**** Fourth level headline
     Just in case you have really complicated steps to describe.
***** Deeper
      This is pretty much useless at this point, unless you are describing a rocket disassembly.

** Tags
Headlines can have tags, you add a tag by adding your tag surrounded by colons =:tag_name:= at the right of the headline. You can add several tags too: =:tag1:tag2:=
*** Headline with a tag                              :one_tag:another:

* Tracking to-do lists.
Headlines can have manual the keywords =TODO= and =DONE= to denote their state, or automatic counters of checked sub-items by using =[/]= and =[%]=.
** TODO Cat managment
- [X] Feed my cat.
- [ ] Sell my cat.

** DONE Dog Managment
- [X] Find a nice dog
- [X] Offer the money I make with the cat as copay for it.

** [2/2] Garden care
- [X] Water plants.
- [X] Weed out.

** [50%] Other shores
- [X] Do laundry.
- [ ] Make lunch.


* Tables
Auto expanding tables are one of the coolest features of org-mode, because
tables in Markdown just plain suck. In order to create a new table, you can
start typing it manually, or press =C-c |=, which will prompt for the table's
dimensions.

| First Name                 | Last Name           | Years using Emacs |
|----------------------------+---------------------+-------------------|
| Lee                        | Hinman              |                 5 |
| Mike                       | Hunsinger           |                 2 |
| Daniel                     | Glauser             |                 4 |
| Really-long-first-name-guy | long-last-name-pers |                 1 |

* Links
In an org-mode file, you can press =C-c l= to store a pointer to wherever you
are in the file. Then, with (or without) text highlighted hit =C-C C-l= to make
it into a link.

#+BEGIN_SRC fundamental
[[http://google.com/][Google]]
#+END_SRC

translates into this: [[http://google.com/][Google]]. You can link to files, images, websites, emails, irc, and all kinds of things.

* Source Code

Lisp
#+BEGIN_SRC emacs-lisp
(defun my/function ()
  "docstring"
  (interactive)
  (progn
    (+ 1 1)
    (message "Hi")))
#+END_SRC

Bash (sh)
#+BEGIN_SRC sh
echo $data > /tmp/foo
for i in *.pdf; do
  convert $i $i.png
done
#+END_SRC

* Exporting an org-mode buffer
Org has a lot of export options, they are all contained behind a =C-c C-e=
export backend, exporting to HTML, markdown, plain text, pdf, etc.

[[file:../index.html][Back to Home]]
